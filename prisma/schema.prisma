// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

// Communities can create a scope to facilitate the management of identities 
model Scopes {
  id        String   @id
  slug      String   @unique
  name      String
  description String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([slug])
}

model Sessions {
  // The session npub is the public key of the local key that is used to connect
  sessionNpub        String   @id
  npub      String
  appNpub   String?
  scopeSlug String?
  expiresAt BigInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([npub, appNpub])
}

// New model to associate Nostr keys with Supabase users
model UserKeys {
  id          String   @id @default(cuid())
  userId      String   // Supabase user ID
  npub        String   // Nostr public key
  name        String?  // Display name for the key
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Reference to the Keys table
  key         Keys     @relation(fields: [npub], references: [npub], onDelete: Cascade)

  @@unique([userId, npub])
  @@index([userId])
}

model Keys {
  npub     String @id
  nip05    String?
  name     String?
  avatar   String?
  relays   String[]
  enckey   String
  // In Noauth, this is an Augmented Nostr Event with an info field representing the profile
  profile  Json?
  ncryptsec String?  
  localKey String?
  email    String?
  scopeSlug String? // Associate keys with specific scopes

  // Relation to UserKeys
  userKeys UserKeys[]
  @@index([npub])
  @@index([scopeSlug])
}

model Apps {
  appNpub   String
  npub      String
  name      String
  icon      String
  url       String
  timestamp BigInt
  updateTimestamp BigInt
  permUpdateTimestamp BigInt
  userAgent String?
  token String?
  subNpub String?

  @@id(name: "appId", [appNpub, npub])
}

model Perms {
  id        String @id
  npub      String
  appNpub   String
  perm      String
  value     String
  timestamp BigInt
}

model Pending {
  id        String @id
  npub      String
  appNpub   String
  timestamp BigInt
  method    String
  params    String
  appUrl    String?
  appName   String?
  appIcon   String?
  subNpub   String?
}

model History {
  id        String   @id
  npub      String
  appNpub   String
  timestamp BigInt
  method    String
  allowed   Boolean?
  params    String?
  result    String?

  @@index([npub, appNpub])
}

model SyncHistory {
  npub String @id
}

model ConnectTokens {
  token     String  @id
  npub      String
  timestamp BigInt
  expiry    BigInt
  subNpub   String?
  jsonData  String

  @@index([npub, subNpub])
}
